<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dkt.school.stu.dao.StuChangeClassMapper" >
  <resultMap id="BaseResultMap" type="com.dkt.school.stu.model.StuChangeClass" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="change_type" property="changeType" jdbcType="INTEGER" />
    <result column="cause" property="cause" jdbcType="VARCHAR" />
    <result column="out_class_id" property="outClassId" jdbcType="INTEGER" />
    <result column="out_class_date" property="outClassDate" jdbcType="DATE" />
    <result column="into_class_id" property="intoClassId" jdbcType="INTEGER" />
    <result column="into_class_date" property="intoClassDate" jdbcType="DATE" />
    <result column="oper_user" property="operUser" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, student_id, change_type, cause, out_class_id, out_class_date, into_class_id, 
    into_class_date, oper_user, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dkt.school.stu.model.StuChangeClassExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stu_student_change_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from stu_student_change_class
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from stu_student_change_class
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dkt.school.stu.model.StuChangeClassExample" >
    delete from stu_student_change_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dkt.school.stu.model.StuChangeClass" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into stu_student_change_class (student_id, change_type, cause, 
      out_class_id, out_class_date, into_class_id, 
      into_class_date, oper_user, remark
      )
    values (#{studentId,jdbcType=INTEGER}, #{changeType,jdbcType=INTEGER}, #{cause,jdbcType=VARCHAR}, 
      #{outClassId,jdbcType=INTEGER}, #{outClassDate,jdbcType=DATE}, #{intoClassId,jdbcType=INTEGER}, 
      #{intoClassDate,jdbcType=DATE}, #{operUser,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dkt.school.stu.model.StuChangeClass" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into stu_student_change_class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="changeType != null" >
        change_type,
      </if>
      <if test="cause != null" >
        cause,
      </if>
      <if test="outClassId != null" >
        out_class_id,
      </if>
      <if test="outClassDate != null" >
        out_class_date,
      </if>
      <if test="intoClassId != null" >
        into_class_id,
      </if>
      <if test="intoClassDate != null" >
        into_class_date,
      </if>
      <if test="operUser != null" >
        oper_user,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="changeType != null" >
        #{changeType,jdbcType=INTEGER},
      </if>
      <if test="cause != null" >
        #{cause,jdbcType=VARCHAR},
      </if>
      <if test="outClassId != null" >
        #{outClassId,jdbcType=INTEGER},
      </if>
      <if test="outClassDate != null" >
        #{outClassDate,jdbcType=DATE},
      </if>
      <if test="intoClassId != null" >
        #{intoClassId,jdbcType=INTEGER},
      </if>
      <if test="intoClassDate != null" >
        #{intoClassDate,jdbcType=DATE},
      </if>
      <if test="operUser != null" >
        #{operUser,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dkt.school.stu.model.StuChangeClassExample" resultType="java.lang.Integer" >
    select count(*) from stu_student_change_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update stu_student_change_class
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.changeType != null" >
        change_type = #{record.changeType,jdbcType=INTEGER},
      </if>
      <if test="record.cause != null" >
        cause = #{record.cause,jdbcType=VARCHAR},
      </if>
      <if test="record.outClassId != null" >
        out_class_id = #{record.outClassId,jdbcType=INTEGER},
      </if>
      <if test="record.outClassDate != null" >
        out_class_date = #{record.outClassDate,jdbcType=DATE},
      </if>
      <if test="record.intoClassId != null" >
        into_class_id = #{record.intoClassId,jdbcType=INTEGER},
      </if>
      <if test="record.intoClassDate != null" >
        into_class_date = #{record.intoClassDate,jdbcType=DATE},
      </if>
      <if test="record.operUser != null" >
        oper_user = #{record.operUser,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update stu_student_change_class
    set id = #{record.id,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      change_type = #{record.changeType,jdbcType=INTEGER},
      cause = #{record.cause,jdbcType=VARCHAR},
      out_class_id = #{record.outClassId,jdbcType=INTEGER},
      out_class_date = #{record.outClassDate,jdbcType=DATE},
      into_class_id = #{record.intoClassId,jdbcType=INTEGER},
      into_class_date = #{record.intoClassDate,jdbcType=DATE},
      oper_user = #{record.operUser,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dkt.school.stu.model.StuChangeClass" >
    update stu_student_change_class
    <set >
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="changeType != null" >
        change_type = #{changeType,jdbcType=INTEGER},
      </if>
      <if test="cause != null" >
        cause = #{cause,jdbcType=VARCHAR},
      </if>
      <if test="outClassId != null" >
        out_class_id = #{outClassId,jdbcType=INTEGER},
      </if>
      <if test="outClassDate != null" >
        out_class_date = #{outClassDate,jdbcType=DATE},
      </if>
      <if test="intoClassId != null" >
        into_class_id = #{intoClassId,jdbcType=INTEGER},
      </if>
      <if test="intoClassDate != null" >
        into_class_date = #{intoClassDate,jdbcType=DATE},
      </if>
      <if test="operUser != null" >
        oper_user = #{operUser,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dkt.school.stu.model.StuChangeClass" >
    update stu_student_change_class
    set student_id = #{studentId,jdbcType=INTEGER},
      change_type = #{changeType,jdbcType=INTEGER},
      cause = #{cause,jdbcType=VARCHAR},
      out_class_id = #{outClassId,jdbcType=INTEGER},
      out_class_date = #{outClassDate,jdbcType=DATE},
      into_class_id = #{intoClassId,jdbcType=INTEGER},
      into_class_date = #{intoClassDate,jdbcType=DATE},
      oper_user = #{operUser,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>