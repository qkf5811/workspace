<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dkt.school.spt.dao.SptMeetingItemMapper" >
  <resultMap id="BaseResultMap" type="com.dkt.school.spt.model.SptMeetingItem" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="INTEGER" />
    <result column="requirement" property="requirement" jdbcType="VARCHAR" />
    <result column="charge_person" property="chargePerson" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, type, account, requirement, charge_person, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from spt_meeting_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from spt_meeting_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dkt.school.spt.model.SptMeetingItem" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into spt_meeting_item (name, type, account, 
      requirement, charge_person, remark
      )
    values (#{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{account,jdbcType=INTEGER}, 
      #{requirement,jdbcType=VARCHAR}, #{chargePerson,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dkt.school.spt.model.SptMeetingItem" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into spt_meeting_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="requirement != null" >
        requirement,
      </if>
      <if test="chargePerson != null" >
        charge_person,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=INTEGER},
      </if>
      <if test="requirement != null" >
        #{requirement,jdbcType=VARCHAR},
      </if>
      <if test="chargePerson != null" >
        #{chargePerson,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dkt.school.spt.model.SptMeetingItem" >
    update spt_meeting_item
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=INTEGER},
      </if>
      <if test="requirement != null" >
        requirement = #{requirement,jdbcType=VARCHAR},
      </if>
      <if test="chargePerson != null" >
        charge_person = #{chargePerson,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dkt.school.spt.model.SptMeetingItem" >
    update spt_meeting_item
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      account = #{account,jdbcType=INTEGER},
      requirement = #{requirement,jdbcType=VARCHAR},
      charge_person = #{chargePerson,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>