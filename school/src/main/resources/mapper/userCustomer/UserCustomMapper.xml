<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dkt.school.user.dao.UserCustomMapper">

	<resultMap type="com.dkt.school.user.model.User" id="User"
		extends="com.dkt.school.user.dao.UserMapper.BaseResultMap">
	</resultMap>
	<resultMap type="com.dkt.school.user.model.Role" id="Role" extends="com.dkt.school.user.dao.RoleMapper.BaseResultMap"></resultMap>
	
	<resultMap type="com.dkt.school.user.dto.UserDto" id="UserDto" extends="User">
		<result column="sex" property="sex" jdbcType="VARCHAR"/>
		<result column="department_name" property="departmentName" jdbcType="VARCHAR"/>
		<result column="is_blocked_string" property="isBlockedString" jdbcType="VARCHAR"/>
		<result column="role_id" property="roleId" jdbcType="INTEGER"/>
		<result column="role_name" property="roleName" jdbcType="VARCHAR"/>	
		<collection  property="roles" javaType="ArrayList" ofType="com.dkt.school.user.model.Role" >
			<id property="id" column="role_id"/>
			<result property="name" column="role_name"/>
		</collection>
	</resultMap>
	
	
	
	<sql id="Base_Column_List">
		u.id, u.account, u.password, u.name, u.sex_type, u.department_id, u.mobile, u.phone, u.email, u.address,u.is_blocked
	</sql>
	
	<select id="checkPassword" resultType="java.lang.Integer">
		select count(*) from usr_user
		WHERE account='${account}'
		AND password='${password}'
	</select>
	
	<select id="getUserByPassword" resultMap="User">
		select <include refid="Base_Column_List"/>
		from usr_user u
		WHERE account='${account}'
		AND password='${password}'
	</select>
	
	<select id="selectUserByAccount" resultMap="User">
		SELECT <include refid="Base_Column_List"/>
		FROM usr_user u WHERE account='${account}'
	</select>
	
	<select id="selectUserDtoByAccount" resultMap="UserDto">
		select <include refid="Base_Column_List"/>,
		r.id AS role_id,r.name AS role_name
		from usr_user u
		left join usr_user_role ur on ur.user_id=u.id
		left join usr_role r on r.id=ur.role_id
		where account='${account}'
	</select>
	

	<select id="countBySearch" resultType="java.lang.Integer">
		select count(*) from usr_user
		<where>
			<if test="account != null and account != ''">
				account like '%${account}%'
			</if>
			<if test="name != null and name != ''">
				and name like '%${name}%'
			</if>
			<if test="departmentId != null and departmentId != '' or departmentId==0">
				and department_id =#{departmentId}
			</if>
		</where>
	</select>
	
	<select id="selectByLimit" resultMap="UserDto">
		select <include refid="Base_Column_List"/>,
		(select ev.name from sys_enumeration_value ev where ev.id=u.sex_type) AS sex,
		(select d.name from usr_department d where d.id=u.department_id) AS department_name,
		(select ev.name from sys_enumeration_value ev where ev.id=u.is_blocked) AS is_blocked_string,
		r.id AS role_id,r.name AS role_name
		from usr_user u
		left join usr_user_role ur on ur.user_id=u.id
		left join usr_role r on r.id=ur.role_id
		<where>
			<if test="account != null and account !=''">
				account like '%${account}%'
			</if>
			<if test="name != null and name != ''">
				and u.name like '%${name}%'
			</if>
			<if test="departmentId != null and departmentId != '' or departmentId==0">
				and u.department_id =#{departmentId}
			</if>
		</where>
		<if test="limit != null">
			limit #{limit.offset},#{limit.rows}
		</if>			
	</select>
	
	<select id="selectUserDtoByUserId" resultMap="UserDto">
		select <include refid="Base_Column_List" />,
		(select ev.name from sys_enumeration_value ev where ev.id=u.sex_type) AS sex,
		(select d.name from usr_department d where d.id=department_id) AS department_name,
		r.id AS role_id,r.name AS role_name
		from usr_user u
		left join usr_user_role ur on ur.user_id=u.id
		left join usr_role r on r.id=ur.role_id
		where u.id='${userId}'
	</select>
	
	<update id="changePassword">
		update usr_user set password = '${password}' where id = ${id};
	</update>

	<select id="selectUserByDepartmentId" resultMap="User">
		select u.name,u.account from usr_user u
		<where>
			<if test="departmentId != null and departmentId != '' or departmentId==0">
				u.department_id =#{departmentId}
			</if>
		</where>
	</select>
</mapper>