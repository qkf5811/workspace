<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dkt.school.edu.dao.TeachTaskMapper" >
  <resultMap id="BaseResultMap" type="com.dkt.school.edu.model.TeachTask" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="study_year_id" property="studyYearId" jdbcType="INTEGER" />
    <result column="term_type" property="termType" jdbcType="INTEGER" />
    <result column="course_plan_id" property="coursePlanId" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="course_seq" property="courseSeq" jdbcType="INTEGER" />
    <result column="teach_course_id" property="teachCourseId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, study_year_id, term_type, course_plan_id, course_id, class_id, course_seq, teach_course_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dkt.school.edu.model.TeachTaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from edu_teach_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from edu_teach_task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from edu_teach_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dkt.school.edu.model.TeachTaskExample" >
    delete from edu_teach_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dkt.school.edu.model.TeachTask" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into edu_teach_task (study_year_id, term_type, course_plan_id, 
      course_id, class_id, course_seq, 
      teach_course_id)
    values (#{studyYearId,jdbcType=INTEGER}, #{termType,jdbcType=INTEGER}, #{coursePlanId,jdbcType=INTEGER}, 
      #{courseId,jdbcType=INTEGER}, #{classId,jdbcType=INTEGER}, #{courseSeq,jdbcType=INTEGER}, 
      #{teachCourseId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dkt.school.edu.model.TeachTask" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into edu_teach_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studyYearId != null" >
        study_year_id,
      </if>
      <if test="termType != null" >
        term_type,
      </if>
      <if test="coursePlanId != null" >
        course_plan_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="courseSeq != null" >
        course_seq,
      </if>
      <if test="teachCourseId != null" >
        teach_course_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studyYearId != null" >
        #{studyYearId,jdbcType=INTEGER},
      </if>
      <if test="termType != null" >
        #{termType,jdbcType=INTEGER},
      </if>
      <if test="coursePlanId != null" >
        #{coursePlanId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="courseSeq != null" >
        #{courseSeq,jdbcType=INTEGER},
      </if>
      <if test="teachCourseId != null" >
        #{teachCourseId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dkt.school.edu.model.TeachTaskExample" resultType="java.lang.Integer" >
    select count(*) from edu_teach_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update edu_teach_task
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studyYearId != null" >
        study_year_id = #{record.studyYearId,jdbcType=INTEGER},
      </if>
      <if test="record.termType != null" >
        term_type = #{record.termType,jdbcType=INTEGER},
      </if>
      <if test="record.coursePlanId != null" >
        course_plan_id = #{record.coursePlanId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.courseSeq != null" >
        course_seq = #{record.courseSeq,jdbcType=INTEGER},
      </if>
      <if test="record.teachCourseId != null" >
        teach_course_id = #{record.teachCourseId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update edu_teach_task
    set id = #{record.id,jdbcType=INTEGER},
      study_year_id = #{record.studyYearId,jdbcType=INTEGER},
      term_type = #{record.termType,jdbcType=INTEGER},
      course_plan_id = #{record.coursePlanId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=INTEGER},
      course_seq = #{record.courseSeq,jdbcType=INTEGER},
      teach_course_id = #{record.teachCourseId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dkt.school.edu.model.TeachTask" >
    update edu_teach_task
    <set >
      <if test="studyYearId != null" >
        study_year_id = #{studyYearId,jdbcType=INTEGER},
      </if>
      <if test="termType != null" >
        term_type = #{termType,jdbcType=INTEGER},
      </if>
      <if test="coursePlanId != null" >
        course_plan_id = #{coursePlanId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="courseSeq != null" >
        course_seq = #{courseSeq,jdbcType=INTEGER},
      </if>
      <if test="teachCourseId != null" >
        teach_course_id = #{teachCourseId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dkt.school.edu.model.TeachTask" >
    update edu_teach_task
    set study_year_id = #{studyYearId,jdbcType=INTEGER},
      term_type = #{termType,jdbcType=INTEGER},
      course_plan_id = #{coursePlanId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=INTEGER},
      course_seq = #{courseSeq,jdbcType=INTEGER},
      teach_course_id = #{teachCourseId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>