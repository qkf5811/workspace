<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dkt.school.equ.dao.RoomApplicationMapper" >
  <resultMap id="BaseResultMap" type="com.dkt.school.equ.model.RoomApplication" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="application_id" property="applicationId" jdbcType="INTEGER" />
    <result column="function_room_id" property="functionRoomId" jdbcType="INTEGER" />
    <result column="use_user_id" property="useUserId" jdbcType="INTEGER" />
    <result column="use_from_date" property="useFromDate" jdbcType="TIMESTAMP" />
    <result column="use_to_date" property="useToDate" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, application_id, function_room_id, use_user_id, use_from_date, use_to_date, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dkt.school.equ.model.RoomApplicationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from equ_room_application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from equ_room_application
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from equ_room_application
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dkt.school.equ.model.RoomApplicationExample" >
    delete from equ_room_application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dkt.school.equ.model.RoomApplication" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into equ_room_application (application_id, function_room_id, use_user_id, 
      use_from_date, use_to_date, remark
      )
    values (#{applicationId,jdbcType=INTEGER}, #{functionRoomId,jdbcType=INTEGER}, #{useUserId,jdbcType=INTEGER}, 
      #{useFromDate,jdbcType=TIMESTAMP}, #{useToDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dkt.school.equ.model.RoomApplication" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into equ_room_application
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="applicationId != null" >
        application_id,
      </if>
      <if test="functionRoomId != null" >
        function_room_id,
      </if>
      <if test="useUserId != null" >
        use_user_id,
      </if>
      <if test="useFromDate != null" >
        use_from_date,
      </if>
      <if test="useToDate != null" >
        use_to_date,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="applicationId != null" >
        #{applicationId,jdbcType=INTEGER},
      </if>
      <if test="functionRoomId != null" >
        #{functionRoomId,jdbcType=INTEGER},
      </if>
      <if test="useUserId != null" >
        #{useUserId,jdbcType=INTEGER},
      </if>
      <if test="useFromDate != null" >
        #{useFromDate,jdbcType=TIMESTAMP},
      </if>
      <if test="useToDate != null" >
        #{useToDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dkt.school.equ.model.RoomApplicationExample" resultType="java.lang.Integer" >
    select count(*) from equ_room_application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update equ_room_application
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.applicationId != null" >
        application_id = #{record.applicationId,jdbcType=INTEGER},
      </if>
      <if test="record.functionRoomId != null" >
        function_room_id = #{record.functionRoomId,jdbcType=INTEGER},
      </if>
      <if test="record.useUserId != null" >
        use_user_id = #{record.useUserId,jdbcType=INTEGER},
      </if>
      <if test="record.useFromDate != null" >
        use_from_date = #{record.useFromDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.useToDate != null" >
        use_to_date = #{record.useToDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update equ_room_application
    set id = #{record.id,jdbcType=INTEGER},
      application_id = #{record.applicationId,jdbcType=INTEGER},
      function_room_id = #{record.functionRoomId,jdbcType=INTEGER},
      use_user_id = #{record.useUserId,jdbcType=INTEGER},
      use_from_date = #{record.useFromDate,jdbcType=TIMESTAMP},
      use_to_date = #{record.useToDate,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dkt.school.equ.model.RoomApplication" >
    update equ_room_application
    <set >
      <if test="applicationId != null" >
        application_id = #{applicationId,jdbcType=INTEGER},
      </if>
      <if test="functionRoomId != null" >
        function_room_id = #{functionRoomId,jdbcType=INTEGER},
      </if>
      <if test="useUserId != null" >
        use_user_id = #{useUserId,jdbcType=INTEGER},
      </if>
      <if test="useFromDate != null" >
        use_from_date = #{useFromDate,jdbcType=TIMESTAMP},
      </if>
      <if test="useToDate != null" >
        use_to_date = #{useToDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dkt.school.equ.model.RoomApplication" >
    update equ_room_application
    set application_id = #{applicationId,jdbcType=INTEGER},
      function_room_id = #{functionRoomId,jdbcType=INTEGER},
      use_user_id = #{useUserId,jdbcType=INTEGER},
      use_from_date = #{useFromDate,jdbcType=TIMESTAMP},
      use_to_date = #{useToDate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>