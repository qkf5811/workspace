<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dkt.school.edu.dao.TeachCourseMapper" >
  <resultMap id="BaseResultMap" type="com.dkt.school.edu.model.TeachCourse" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="study_year_id" property="studyYearId" jdbcType="INTEGER" />
    <result column="term_type" property="termType" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="course_plan_id" property="coursePlanId" jdbcType="INTEGER" />
    <result column="course_seq" property="courseSeq" jdbcType="INTEGER" />
    <result column="classes" property="classes" jdbcType="VARCHAR" />
    <result column="exam_date" property="examDate" jdbcType="DATE" />
    <result column="score_type" property="scoreType" jdbcType="INTEGER" />
    <result column="usual_score_ratio" property="usualScoreRatio" jdbcType="REAL" />
    <result column="input_time" property="inputTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, study_year_id, term_type, course_id, course_plan_id, course_seq, classes, exam_date, 
    score_type, usual_score_ratio, input_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dkt.school.edu.model.TeachCourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from edu_teach_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from edu_teach_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from edu_teach_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dkt.school.edu.model.TeachCourseExample" >
    delete from edu_teach_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dkt.school.edu.model.TeachCourse" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into edu_teach_course (study_year_id, term_type, course_id, 
      course_plan_id, course_seq, classes, 
      exam_date, score_type, usual_score_ratio, 
      input_time)
    values (#{studyYearId,jdbcType=INTEGER}, #{termType,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, 
      #{coursePlanId,jdbcType=INTEGER}, #{courseSeq,jdbcType=INTEGER}, #{classes,jdbcType=VARCHAR}, 
      #{examDate,jdbcType=DATE}, #{scoreType,jdbcType=INTEGER}, #{usualScoreRatio,jdbcType=REAL}, 
      #{inputTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dkt.school.edu.model.TeachCourse" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into edu_teach_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studyYearId != null" >
        study_year_id,
      </if>
      <if test="termType != null" >
        term_type,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="coursePlanId != null" >
        course_plan_id,
      </if>
      <if test="courseSeq != null" >
        course_seq,
      </if>
      <if test="classes != null" >
        classes,
      </if>
      <if test="examDate != null" >
        exam_date,
      </if>
      <if test="scoreType != null" >
        score_type,
      </if>
      <if test="usualScoreRatio != null" >
        usual_score_ratio,
      </if>
      <if test="inputTime != null" >
        input_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studyYearId != null" >
        #{studyYearId,jdbcType=INTEGER},
      </if>
      <if test="termType != null" >
        #{termType,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="coursePlanId != null" >
        #{coursePlanId,jdbcType=INTEGER},
      </if>
      <if test="courseSeq != null" >
        #{courseSeq,jdbcType=INTEGER},
      </if>
      <if test="classes != null" >
        #{classes,jdbcType=VARCHAR},
      </if>
      <if test="examDate != null" >
        #{examDate,jdbcType=DATE},
      </if>
      <if test="scoreType != null" >
        #{scoreType,jdbcType=INTEGER},
      </if>
      <if test="usualScoreRatio != null" >
        #{usualScoreRatio,jdbcType=REAL},
      </if>
      <if test="inputTime != null" >
        #{inputTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dkt.school.edu.model.TeachCourseExample" resultType="java.lang.Integer" >
    select count(*) from edu_teach_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update edu_teach_course
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studyYearId != null" >
        study_year_id = #{record.studyYearId,jdbcType=INTEGER},
      </if>
      <if test="record.termType != null" >
        term_type = #{record.termType,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.coursePlanId != null" >
        course_plan_id = #{record.coursePlanId,jdbcType=INTEGER},
      </if>
      <if test="record.courseSeq != null" >
        course_seq = #{record.courseSeq,jdbcType=INTEGER},
      </if>
      <if test="record.classes != null" >
        classes = #{record.classes,jdbcType=VARCHAR},
      </if>
      <if test="record.examDate != null" >
        exam_date = #{record.examDate,jdbcType=DATE},
      </if>
      <if test="record.scoreType != null" >
        score_type = #{record.scoreType,jdbcType=INTEGER},
      </if>
      <if test="record.usualScoreRatio != null" >
        usual_score_ratio = #{record.usualScoreRatio,jdbcType=REAL},
      </if>
      <if test="record.inputTime != null" >
        input_time = #{record.inputTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update edu_teach_course
    set id = #{record.id,jdbcType=INTEGER},
      study_year_id = #{record.studyYearId,jdbcType=INTEGER},
      term_type = #{record.termType,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      course_plan_id = #{record.coursePlanId,jdbcType=INTEGER},
      course_seq = #{record.courseSeq,jdbcType=INTEGER},
      classes = #{record.classes,jdbcType=VARCHAR},
      exam_date = #{record.examDate,jdbcType=DATE},
      score_type = #{record.scoreType,jdbcType=INTEGER},
      usual_score_ratio = #{record.usualScoreRatio,jdbcType=REAL},
      input_time = #{record.inputTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dkt.school.edu.model.TeachCourse" >
    update edu_teach_course
    <set >
      <if test="studyYearId != null" >
        study_year_id = #{studyYearId,jdbcType=INTEGER},
      </if>
      <if test="termType != null" >
        term_type = #{termType,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="coursePlanId != null" >
        course_plan_id = #{coursePlanId,jdbcType=INTEGER},
      </if>
      <if test="courseSeq != null" >
        course_seq = #{courseSeq,jdbcType=INTEGER},
      </if>
      <if test="classes != null" >
        classes = #{classes,jdbcType=VARCHAR},
      </if>
      <if test="examDate != null" >
        exam_date = #{examDate,jdbcType=DATE},
      </if>
      <if test="scoreType != null" >
        score_type = #{scoreType,jdbcType=INTEGER},
      </if>
      <if test="usualScoreRatio != null" >
        usual_score_ratio = #{usualScoreRatio,jdbcType=REAL},
      </if>
      <if test="inputTime != null" >
        input_time = #{inputTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dkt.school.edu.model.TeachCourse" >
    update edu_teach_course
    set study_year_id = #{studyYearId,jdbcType=INTEGER},
      term_type = #{termType,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      course_plan_id = #{coursePlanId,jdbcType=INTEGER},
      course_seq = #{courseSeq,jdbcType=INTEGER},
      classes = #{classes,jdbcType=VARCHAR},
      exam_date = #{examDate,jdbcType=DATE},
      score_type = #{scoreType,jdbcType=INTEGER},
      usual_score_ratio = #{usualScoreRatio,jdbcType=REAL},
      input_time = #{inputTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>