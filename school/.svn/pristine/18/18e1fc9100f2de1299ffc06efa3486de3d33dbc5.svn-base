<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dkt.school.tea.dao.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.dkt.school.tea.model.Teacher" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="major_id" property="majorId" jdbcType="INTEGER" />
    <result column="now_position" property="nowPosition" jdbcType="VARCHAR" />
    <result column="title_type" property="titleType" jdbcType="INTEGER" />
    <result column="staff_type" property="staffType" jdbcType="INTEGER" />
    <result column="position_type" property="positionType" jdbcType="INTEGER" />
    <result column="work_start_time" property="workStartTime" jdbcType="DATE" />
    <result column="take_office_time" property="takeOfficeTime" jdbcType="DATE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, code, major_id, now_position, title_type, staff_type, position_type, work_start_time, 
    take_office_time, remark, user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dkt.school.tea.model.TeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tea_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tea_teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tea_teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dkt.school.tea.model.TeacherExample" >
    delete from tea_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dkt.school.tea.model.Teacher" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tea_teacher (name, code, major_id, 
      now_position, title_type, staff_type, 
      position_type, work_start_time, take_office_time, 
      remark, user_id)
    values (#{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{majorId,jdbcType=INTEGER}, 
      #{nowPosition,jdbcType=VARCHAR}, #{titleType,jdbcType=INTEGER}, #{staffType,jdbcType=INTEGER}, 
      #{positionType,jdbcType=INTEGER}, #{workStartTime,jdbcType=DATE}, #{takeOfficeTime,jdbcType=DATE}, 
      #{remark,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dkt.school.tea.model.Teacher" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tea_teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="majorId != null" >
        major_id,
      </if>
      <if test="nowPosition != null" >
        now_position,
      </if>
      <if test="titleType != null" >
        title_type,
      </if>
      <if test="staffType != null" >
        staff_type,
      </if>
      <if test="positionType != null" >
        position_type,
      </if>
      <if test="workStartTime != null" >
        work_start_time,
      </if>
      <if test="takeOfficeTime != null" >
        take_office_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null" >
        #{majorId,jdbcType=INTEGER},
      </if>
      <if test="nowPosition != null" >
        #{nowPosition,jdbcType=VARCHAR},
      </if>
      <if test="titleType != null" >
        #{titleType,jdbcType=INTEGER},
      </if>
      <if test="staffType != null" >
        #{staffType,jdbcType=INTEGER},
      </if>
      <if test="positionType != null" >
        #{positionType,jdbcType=INTEGER},
      </if>
      <if test="workStartTime != null" >
        #{workStartTime,jdbcType=DATE},
      </if>
      <if test="takeOfficeTime != null" >
        #{takeOfficeTime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dkt.school.tea.model.TeacherExample" resultType="java.lang.Integer" >
    select count(*) from tea_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tea_teacher
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.majorId != null" >
        major_id = #{record.majorId,jdbcType=INTEGER},
      </if>
      <if test="record.nowPosition != null" >
        now_position = #{record.nowPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.titleType != null" >
        title_type = #{record.titleType,jdbcType=INTEGER},
      </if>
      <if test="record.staffType != null" >
        staff_type = #{record.staffType,jdbcType=INTEGER},
      </if>
      <if test="record.positionType != null" >
        position_type = #{record.positionType,jdbcType=INTEGER},
      </if>
      <if test="record.workStartTime != null" >
        work_start_time = #{record.workStartTime,jdbcType=DATE},
      </if>
      <if test="record.takeOfficeTime != null" >
        take_office_time = #{record.takeOfficeTime,jdbcType=DATE},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tea_teacher
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      major_id = #{record.majorId,jdbcType=INTEGER},
      now_position = #{record.nowPosition,jdbcType=VARCHAR},
      title_type = #{record.titleType,jdbcType=INTEGER},
      staff_type = #{record.staffType,jdbcType=INTEGER},
      position_type = #{record.positionType,jdbcType=INTEGER},
      work_start_time = #{record.workStartTime,jdbcType=DATE},
      take_office_time = #{record.takeOfficeTime,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dkt.school.tea.model.Teacher" >
    update tea_teacher
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null" >
        major_id = #{majorId,jdbcType=INTEGER},
      </if>
      <if test="nowPosition != null" >
        now_position = #{nowPosition,jdbcType=VARCHAR},
      </if>
      <if test="titleType != null" >
        title_type = #{titleType,jdbcType=INTEGER},
      </if>
      <if test="staffType != null" >
        staff_type = #{staffType,jdbcType=INTEGER},
      </if>
      <if test="positionType != null" >
        position_type = #{positionType,jdbcType=INTEGER},
      </if>
      <if test="workStartTime != null" >
        work_start_time = #{workStartTime,jdbcType=DATE},
      </if>
      <if test="takeOfficeTime != null" >
        take_office_time = #{takeOfficeTime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dkt.school.tea.model.Teacher" >
    update tea_teacher
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      major_id = #{majorId,jdbcType=INTEGER},
      now_position = #{nowPosition,jdbcType=VARCHAR},
      title_type = #{titleType,jdbcType=INTEGER},
      staff_type = #{staffType,jdbcType=INTEGER},
      position_type = #{positionType,jdbcType=INTEGER},
      work_start_time = #{workStartTime,jdbcType=DATE},
      take_office_time = #{takeOfficeTime,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>